# Phase 6: Load Balancer Deployment

## Test Step 6.1: Add ALB
**Action:**
1. Create `alb.tf`:
   ```hcl
   resource "aws_lb" "main" {
     name               = "e2e-test-alb"
     internal           = false
     load_balancer_type = "application"
     security_groups    = [aws_security_group.alb.id]
     subnets            = [aws_subnet.public.id, aws_subnet.private.id]
     
     tags = { Name = "e2e-test-alb" }
   }
   
   resource "aws_lb_target_group" "app" {
     name     = "app-targets"
     port     = 8080
     protocol = "HTTP"
     vpc_id   = aws_vpc.main.id
     
     health_check {
       enabled             = true
       healthy_threshold   = 2
       path                = "/health"
       timeout             = 5
       unhealthy_threshold = 2
     }
     
     tags = { Name = "app-targets" }
   }
   
   resource "aws_lb_listener" "app" {
     load_balancer_arn = aws_lb.main.arn
     port              = "80"
     protocol          = "HTTP"
     
     default_action {
       type             = "forward"
       target_group_arn = aws_lb_target_group.app.arn
     }
   }
   ```
2. Execute:
   ```bash
   terraform plan
   terraform apply -auto-approve
   ```

**Validation Checkpoints:**
- ALB state "active" (2-3 min)
- Target group ready

**Expected Results:**
- ALB DNS name available
- Health check configured

## Test Step 6.2: Add ALB Output
**Action:**
1. Add to `outputs.tf`:
   ```hcl
   output "alb_dns_name" {
     value = aws_lb.main.dns_name
   }
   ```

**Rollback Procedure:**
```bash
terraform destroy -auto-approve
```
